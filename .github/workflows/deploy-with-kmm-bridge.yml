name: Deploy WIth KMM Bridge Github Workflow


on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main # or any other event

# Jobs :  https://github.com/touchlab/KMMBridgeGithubWorkflow/blob/main/.github/workflows/faktorybuildautoversion.yml



jobs:
  kmmbridgepublish:
    concurrency: "kmmbridgepublish-${{ github.repository }}"
    runs-on: macos-12
    steps:
      - name: Checkout the repo with tags
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: touchlab/read-property@0.1
        id: versionBasePropertyValue
        with:
          file: ./gradle.properties
          property: versionBaseProperty

      - name: Print versionBasePropertyValue
        id: output
        run: echo "${{ steps.versionBasePropertyValue.outputs.propVal }}"

      - name: Touchlab Sample Sanity Check (Ignore this for your CI)
        uses: touchlab/sample-group-sanity-check@0.2

      - uses: touchlab/autoversion-nextversion@main
        id: autoversion
        with:
          versionBase: ${{ steps.versionBasePropertyValue.outputs.propVal }}

      - name: Print Next Version
        id: outputversion
        run: echo "${{ steps.autoversion.outputs.nextVersion }}"

      - uses: touchlab/autoversion-tagmarker@main
        id: autoversion-tagmarker
        with:
          nextVersion: ${{ steps.autoversion.outputs.nextVersion }}

      - uses: touchlab/autoversion-buildbranch@main
        id: autoversion-buildbranch
        with:
          buildBranch: "build-${{ steps.autoversion.outputs.nextVersion }}"

      - name: Apply SSH Key
        if: ${{ env.PODSPEC_SSH_KEY_EXISTS == 'true' }}
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.PODSPEC_SSH_KEY }}


      - uses: extractions/netrc@v1
        with:
          machine:  trunk.cocoapods.org
          username: ${{ secrets.COCOAPODS_EMAIL }}
          password: ${{ secrets.COCOAPODS_TRUNK_TOKEN  }}


      - uses: extractions/netrc@v1
        with:
          machine:  maven.pkg.github.com
          username: ${{ secrets.netrcUsername != '' && secrets.netrcUsername || 'cirunner' }}
          password: ${{ secrets.netrcPassword != '' && secrets.netrcPassword || secrets.GITHUB_TOKEN  }}

      - uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: 17

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Cache build tooling
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.konan
          key: ${{ runner.os }}-v4-${{ hashFiles('*.gradle.kts') }}




      - name: Build Main
        run: ./gradlew podPublishReleaseXCFramework



      - name: Zip XCFramework
        run: zip -r JanusMessageSdk.xcframework.zip /Users/runner/work/janus-message-sdk/janus-message-sdk/shared/build/cocoapods/publish/release/shared.xcframework

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
            name: JanusMessageSdk.xcframework
            path:  JanusMessageSdk.xcframework.zip

      - name: Create Tag
        run: |
            git config user.name "${{ github.actor }}"
            git config user.email "${{ github.actor }}@users.noreply.github.com"
            git tag -a ${{ steps.autoversion.outputs.nextVersion }} -m "Release version ${{ steps.autoversion.outputs.nextVersion }}"
            git push origin ${{ steps.autoversion.outputs.nextVersion }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.autoversion.outputs.nextVersion }}
          release_name: Release version ${{ steps.autoversion.outputs.nextVersion }}
          body: Updates for ${{ steps.autoversion.outputs.nextVersion }}

      - name: Attach Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: JanusMessageSdk.xcframework.zip
          asset_name: JanusMessageSdk.xcframework.zip
          asset_content_type: application/zip

      - name: Push to CocoaPods
        run: ./gradlew pushRemotePodspec


        env:
          PODSPEC_SSH_KEY_EXISTS: ${{ secrets.PODSPEC_SSH_KEY != ''}}
          MODULE: ${{ inputs.module != '' && format('{0}:',inputs.module) || '' }}
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
          COCOAPODS_EMAIL: ${{ secrets.COCOAPODS_EMAIL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PODSPEC_SSH_KEY: ${{ secrets.PODSPEC_SSH_KEY }}
          netrcUsername: ${{ secrets.netrcUsername }}
          netrcPassword: ${{ secrets.netrcPassword }}
